name: Openwrt-AutoBuild

on:
   workflow_dispatch:
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - 'start'
#  schedule:
#    - cron: 0 20 */7 * *
   watch:
     types: [started]

env:
  RUN_VALIDATION: true
  FEEDS_CONF: user/feeds.conf
  CONFIG_FILE: 250628.config
  DIY_P1_SH: user/diy1.sh
  DIY_P2_SH: user/diy2.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on:  ubuntu-latest
    

    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [lean-x64] #lean-x64,lean-ipq40xx,lean-mt7621,lean-rockchip,lienol-x64
    
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Set Date
      run: |
         date=$(date +%Y-%m-%d)
         echo "DATE=$date" >> $GITHUB_ENV
                 
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        ( sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex g++ gawk gcc-multilib gettext \
        git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev swig libpython3-dev aria2 jq subversion qemu-utils ccache rename libelf-dev
        sudo -E apt-get -qq purge azure-cli ghc* zulu* hhvm llvm* firefox powershell openjdk* dotnet* google* mysql* php* android* rename speedtest-cli
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean ) &
        sudo timedatectl set-timezone "$TZ"
        
   
    - name: Load Settings.ini
      run: |    
        source "${GITHUB_WORKSPACE}/user/settings.ini"
        echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
        echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV
        echo "UPLOAD_PACKAGES_DIR=${UPLOAD_PACKAGES_DIR}" >> $GITHUB_ENV
        echo "UPLOAD_TARGETS_DIR=${UPLOAD_TARGETS_DIR}" >> $GITHUB_ENV
        echo "UPLOAD_FIRMWARE=${UPLOAD_FIRMWARE}" >> $GITHUB_ENV
        echo "UPLOAD_TO_ARTIFACTS=${UPLOAD_TO_ARTIFACTS}" >> $GITHUB_ENV
        echo "UPLOAD_TO_REALEASE=${UPLOAD_TO_REALEASE}" >> $GITHUB_ENV
        echo "UPLOAD_TO_WETRANSFER=${UPLOAD_TO_WETRANSFER}" >> $GITHUB_ENV
      #  echo "WECHAT_NOTIFICATION=${WECHAT_NOTIFICATION}" >> $GITHUB_ENV
        

        
    - name: Clone source code
      run: |
        git clone ${{ env.REPO_URL }} -b ${{ env.REPO_BRANCH }} openwrt
        
    - name: custom feeds
      run: |
        mv $GITHUB_WORKSPACE/$FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
 
    - name: Update feeds
      run: |
         cd openwrt
         ./scripts/feeds update -a
         
    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
       mv $GITHUB_WORKSPACE/user/${{matrix.target}}/$CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH        
        

         
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        find ./bin  ! -name '*ac2100*' -name *initramfs*  -exec rm -f {} \;
        
        
    - name: Pack packages_dir
      run: |
        cd openwrt/bin/packages/
        tar -cvf  ${{matrix.target}}_packages.tar ./
        gzip ${{matrix.target}}_packages.tar
        mv *.tar.gz ..
        
    - name: Pack targets_dir
      run: |
        cd openwrt/bin/targets/
        tar -cvf  ${{matrix.target}}_targets.tar ./
        gzip ${{matrix.target}}_targets.tar
        mv *.tar.gz ..
        
    - name: Assemble Firmware
      run: |
          rm -rf ./Firmware/
          mkdir -p ./Firmware/
          find openwrt/bin/targets/ -name "*bin*" | xargs -i cp {} ./Firmware/
          find openwrt/bin/targets/ -name "*img*" | xargs -i cp -f {} ./Firmware/

    
           
          

    - name: Upload packages directory
      if: env.UPLOAD_PACKAGES_DIR == 'true' && env.UPLOAD_TO_ARTIFACTS == 'true' && !cancelled()ã€€
      uses: actions/upload-artifact@main
      with:
           name: OpenWrt_packages_${{matrix.target}}
           path: openwrt/bin/packages
        
    - name: Upload targets directory
      if: env.UPLOAD_TARGETS_DIR == 'true' && env.UPLOAD_TO_ARTIFACTS == 'true' && !cancelled() 
      uses: actions/upload-artifact@main
      with:
          name: OpenWrt_targets_${{matrix.target}}
          path: openwrt/bin/targets
        
    - name: Upload Firmware
      if: env.UPLOAD_FIRMWARE == 'true' && env.UPLOAD_TO_ARTIFACTS == 'true' && !cancelled() 
      uses: actions/upload-artifact@main
      with:
         name: OpenWrt_firmware_${{matrix.target}}
         path: ./Firmware/
               
   
